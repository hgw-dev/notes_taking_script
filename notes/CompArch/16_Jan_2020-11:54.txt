
    ## Thursday January 16, 2020 ##

we use the Von Neumann model/ architecture
	- also called 'stored program computer' 
	- stored program
		- instructions stored in a linear memory array
		- memory is unified between instructions and data
		- interpretation of stored value depends on control signals
	- sequential instruction processing
		- one instruction processed (fetched, executed, completed) at a time
		- program counter (instruction pointer) identifies current instr.
		- program counter is advanced sequentially except for control transfer instructions
 	- instr is fetched and executed in 'control flow order'
	 	- specified by the instr pointer
	 	- sequential unless explicit control flow instr

alternative ==> Data Flow model
	- instr is fetched and executed in 'data flow order'
		- when its operands are ready
		- no instr pointer!
	- instr ordering specified by data flow dependence
		- each instr specifies who should receive result
		- instr can fire whenever all operands are received
	- potentially many instr can execute at a time
	- in a data flow machines, program consists of data flow nodes
		- data flow node fires (fetched and executed) when all inputs are ready
